--- mDNSResponder-214.3.2/mDNSPosix/mDNSPosix.c	2009-01-25 11:16:46.000000000 +0800
+++ mDNSResponder-214.3.2/mDNSPosix/mDNSPosix.c	2013-06-27 17:54:15.520272048 +0800
@@ -218,9 +218,20 @@
 // Functions
 
 int gMDNSPlatformPosixVerboseLevel = 0;
+static char bindDeviceName[20] = "NOI";
 
 #define PosixErrorToStatus(errNum) ((errNum) == 0 ? mStatus_NoError : mStatus_UnknownErr)
 
+void setBindDeviceName(char *devname) {
+    if(devname && devname[0]) {
+        strncpy(bindDeviceName, devname, sizeof(bindDeviceName) - 1);
+    }
+}
+
+char *getBindDeviceName(void) {
+    return bindDeviceName;
+}
+
 mDNSlocal void SockAddrTomDNSAddr(const struct sockaddr *const sa, mDNSAddr *ipAddr, mDNSIPPort *ipPort)
 	{
 	switch (sa->sa_family)
@@ -915,7 +926,13 @@
 	assert(intfAddr != NULL);
 	assert(intfName != NULL);
 	assert(intfMask != NULL);
-
+    /* EZPacket , Verify br0 for LAN here */
+    if( strncmp("NOI", getBindDeviceName(),3) && strncmp(intfName, getBindDeviceName(), 10)) {
+        /* Unsupported device */
+        err = 1;
+		debugf("SetupOneInterface: %s failed to register %d", intfName, err);
+        return 1;
+    }
 	// Allocate the interface structure itself.
 	intf = (PosixNetworkInterface*)malloc(sizeof(*intf));
 	if (intf == NULL) { assert(0); err = ENOMEM; }
--- mDNSResponder-214.3.2/mDNSPosix/mDNSPosix.h	2007-04-23 04:15:46.000000000 +0800
+++ mDNSResponder-214.3.2/mDNSPosix/mDNSPosix.h	2013-06-27 17:54:31.240291691 +0800
@@ -140,6 +140,8 @@
 extern mStatus mDNSPosixListenForSignalInEventLoop( int signum);
 extern mStatus mDNSPosixIgnoreSignalInEventLoop( int signum);
 extern mStatus mDNSPosixRunEventLoopOnce( mDNS *m, const struct timeval *pTimeout, sigset_t *pSignalsReceived, mDNSBool *pDataDispatched);
+void setBindDeviceName(char *devname);
+char *getBindDeviceName(void);
 
 #ifdef  __cplusplus
     }
--- mDNSResponder-214.3.2/mDNSPosix/Responder.c	2009-01-15 11:39:08.000000000 +0800
+++ mDNSResponder-214.3.2/mDNSPosix/Responder.c	2013-06-27 17:53:54.350270802 +0800
@@ -365,9 +365,18 @@
     // Parse command line options using getopt.
     
     do {
-        ch = getopt(argc, argv, "v:rn:t:d:p:f:dP:bx");
+        ch = getopt(argc, argv, "v:rn:t:d:p:f:dP:bxi:");
         if (ch != -1) {
             switch (ch) {
+                case 'i':
+                    if(optarg && optarg[0]) {
+                        setBindDeviceName(optarg);
+                    } 
+                    else {
+                        fprintf(stderr, "Must specify a device with -i option, example -i eth2.\n");
+                        exit(1);
+                    }
+                    break;
                 case 'v':
                     gMDNSPlatformPosixVerboseLevel = atoi(optarg);
                     if (gMDNSPlatformPosixVerboseLevel < 0 || gMDNSPlatformPosixVerboseLevel > 2) {
@@ -795,7 +804,7 @@
 		
 		// 3. Give the mDNSPosix layer a chance to add its information to the fd_set and timeout
 		mDNSPosixGetFDSet(&mDNSStorage, &nfds, &readfds, &timeout);
-		
+
 		// 4. Call select as normal
 		verbosedebugf("select(%d, %d.%06d)", nfds, timeout.tv_sec, timeout.tv_usec);
 		result = select(nfds, &readfds, NULL, NULL, &timeout);
