#!/bin/sh /etc/rc.common
CONF_FILE=""
R_CONF_FILE=""
USBSTORAGE=99
log_msg="Autorun"

check_autorun() {
    local arunpath="$1"
    local can_arun="NO"
    local licency_key=""
    local arunkey=""
    local arun_chk_repeatness=""
    local arun_chk_executed=""
    [ -n "$arunpath" -a \
      -f "$arunpath/arun.sh" -a \
      -f "$arunpath/arun.policy" ] && {
        # licency_key="$(nvram get license_key)"
        # In arun.policy file, we will have a AUTORUN_KEY=XX statement which
        # specify autorun key
        # arunkey=$(cat $arunpath/arun.policy | grep AUTORUN_KEY)
        # eval $arunkey
        arun_chk_repeatness=$(cat $arunpath/arun.policy | grep AUTORUN_REPEAT)
        arun_chk_executed=$(cat $arunpath/arun.policy | grep AUTORUN_EXEC)
        eval $arun_chk_repeatness
        eval $arun_chk_executed
        [ "$AUTORUN_REPEAT" = "always" -o "$AUTORUN_EXEC" != "completed" ] && {
            can_arun="YES"
        }
    }
    echo "$can_arun"
}

arun_action() {
    local USB_AUTORUN=0
    local SD_AUTORUN=0
    local USB_AUTORUN=0
    local storpath=""
    local idx=0
    local cnt=$(nvram get storage_device_mount_num)
    local arunact="$1"
    [ -z "$arunact" ] && arunact="stop"
    if [ "$cnt" = "0" -o -z "$cnt" ]; then
        # Not specified storage_device_mount_rule, use SD/USB default pair
        echo "Under Construction"
    else
        while [ "$idx" -lt "$cnt" ]; do
            storpath=$(nvram show storage_device_mount_rule $idx mnt)
            [ -z "$storpath" ] && continue
            storpath="/tmp/mnt/$storpath"
            [ "$(check_autorun $storpath)" = "YES" ] && {
                STORPATH="$storpath" sh -x $storpath/arun.sh $arunact
                [ -z "$(cat $storpath/arun.policy | grep AUTORUN_EXEC)" ] && echo "AUTORUN_EXEC=completed" >> $storpath/arun.policy
            }
            idx=$(($idx + 1))
        done
    fi
}

start() {
    arun_action start
}

stop() {
    arun_action stop
}

