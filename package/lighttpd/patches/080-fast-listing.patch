--- lighttpd-1.4.30/src/mod_webdav.c	2013-04-18 14:45:42.508691934 +0800
+++ lighttpd-1.4.30/src/mod_webdav.c	2013-04-18 14:48:44.010271301 +0800
@@ -980,7 +980,44 @@
 		char mtime_buf[] = "Thu, 18 Aug 2005 07:27:16 GMT";
 		size_t k;
 
-		if (0 == strcmp(prop_name, "resourcetype")) {
+               if (0 == strcmp(prop_name, "listing_fastpath")) {
+                        if (S_ISDIR(sce->st.st_mode)) {
+                                buffer_append_string_len(b, CONST_STR_LEN("<D:resourcetype><D:collection/></D:resourcetype>"));
+                        }
+                        if (S_ISDIR(sce->st.st_mode)) {
+                                buffer_append_string_len(b, CONST_STR_LEN("<D:getcontenttype>httpd/unix-directory</D:getcontenttype>"));
+                        } else if(S_ISREG(sce->st.st_mode)) {
+                                for (k = 0; k < con->conf.mimetypes->used; k++) {
+                                        data_string *ds = (data_string *)con->conf.mimetypes->data[k];
+
+                                        if (ds->key->used == 0) continue;
+
+                                        if (buffer_is_equal_right_len(dst->path, ds->key, ds->key->used - 1)) {
+                                                buffer_append_string_len(b,CONST_STR_LEN("<D:getcontenttype>"));
+                                                buffer_append_string_buffer(b, ds->value);
+                                                buffer_append_string_len(b, CONST_STR_LEN("</D:getcontenttype>"));
+
+                                                break;
+                                        }
+                                }
+                        }
+                        buffer_append_string_len(b, CONST_STR_LEN("<D:creationdate ns0:dt=\"dateTime.tz\">"));
+                        strftime(ctime_buf, sizeof(ctime_buf), "%Y-%m-%dT%H:%M:%SZ", gmtime(&(sce->st.st_ctime)));
+                        buffer_append_string(b, ctime_buf);
+                        buffer_append_string_len(b, CONST_STR_LEN("</D:creationdate>"));
+                        buffer_append_string_len(b,CONST_STR_LEN("<D:getlastmodified ns0:dt=\"dateTime.rfc1123\">"));
+                        strftime(mtime_buf, sizeof(mtime_buf), "%a, %d %b %Y %H:%M:%S GMT", gmtime(&(sce->st.st_mtime)));
+                        buffer_append_string(b, mtime_buf);
+                        buffer_append_string_len(b, CONST_STR_LEN("</D:getlastmodified>"));
+                        buffer_append_string_len(b,CONST_STR_LEN("<D:getcontentlength>"));
+                        buffer_append_off_t(b, sce->st.st_size);
+                        buffer_append_string_len(b, CONST_STR_LEN("</D:getcontentlength>"));
+                        buffer_append_string_len(b,CONST_STR_LEN("<D:getcontentlanguage>"));
+                        buffer_append_string_len(b, CONST_STR_LEN("en"));
+                        buffer_append_string_len(b, CONST_STR_LEN("</D:getcontentlanguage>"));
+                        found = 1;
+
+		} else if (0 == strcmp(prop_name, "resourcetype")) {
 			if (S_ISDIR(sce->st.st_mode)) {
 				buffer_append_string_len(b, CONST_STR_LEN("<D:resourcetype><D:collection/></D:resourcetype>"));
 				found = 1;
@@ -1119,15 +1156,32 @@
 			}
 		}
 	} else {
+#if defined(PLATFORM_AXA)
+                /* just do one times LSTAT to abate time-wasting */
+                webdav_get_live_property(srv, con, p, dst, "listing_fastpath", b_200);
+#else
 		for (i = 0; live_properties[i].prop; i++) {
 			/* a local 'live' property */
 			webdav_get_live_property(srv, con, p, dst, live_properties[i].prop, b_200);
 		}
+#endif
 	}
 
 	return 0;
 }
 
+static int webdav_parse_prop(chunkqueue *cq) {
+	chunk *c;
+	char *prop_result;
+	c = cq->first;
+
+	prop_result = strstr(c->mem->ptr + c->offset,"<D:prop><D:fastlist/></D:prop>");
+        if (prop_result != NULL)
+	        return 1;
+	else
+		return 0;
+}
+
 #ifdef USE_PROPPATCH
 static int webdav_parse_chunkqueue(server *srv, connection *con, plugin_data *p, chunkqueue *cq, xmlDoc **ret_xml) {
 	xmlParserCtxtPtr ctxt;
@@ -1391,6 +1445,9 @@
 			break;
 		}
 
+#if defined (PLATFORM_AXA)
+		int goto_fast_list = webdav_parse_prop(con->request_content_queue);
+#endif
 
 #ifdef USE_PROPPATCH
 		/* any special requests or just allprop ? */
@@ -1569,7 +1626,10 @@
 					buffer_reset(prop_200);
 					buffer_reset(prop_404);
 
-					webdav_get_props(srv, con, p, &d, req_props, prop_200, prop_404);
+#if defined(PLATFORM_AXA)
+					if(goto_fast_list !=1)
+#endif
+						webdav_get_props(srv, con, p, &d, req_props, prop_200, prop_404);
 
 					iFile_Amount_Counter++;
 					buffer_append_string_len(b,CONST_STR_LEN("<D:response>\n"));
@@ -1579,6 +1639,39 @@
 					buffer_append_string_buffer(b, con->uri.authority);
 					buffer_append_string_encoded(b, CONST_BUF_LEN(d.rel_path), ENCODING_REL_URI);
 					buffer_append_string_len(b,CONST_STR_LEN("</D:href>\n"));
+#if defined(PLATFORM_AXA)
+			                /* MJ add for fast listing */
+                        		if(goto_fast_list == 1) {
+
+                                                buffer_append_string_len(b,CONST_STR_LEN("<D:propstat>\n"));
+                                                buffer_append_string_len(b,CONST_STR_LEN("<D:prop>\n"));
+
+						char ctime_buf[] = "2005-08-18T07:27:16Z";
+						char mtime_buf[] = "Thu, 18 Aug 2005 07:27:16 GMT";
+						size_t k;
+			                        if (de->d_type == 4) {
+                                			buffer_append_string_len(b, CONST_STR_LEN("<D:resourcetype><D:collection/></D:resourcetype>"));
+                                			buffer_append_string_len(b, CONST_STR_LEN("<D:getcontenttype>httpd/unix-directory</D:getcontenttype>"));
+						} else if(de->d_type == 8) {
+			                                for (k = 0; k < con->conf.mimetypes->used; k++) {
+			                                        data_string *ds = (data_string *)con->conf.mimetypes->data[k];
+
+			                                        if (ds->key->used == 0) continue;
+
+			                                        if (buffer_is_equal_right_len(d.path, ds->key, ds->key->used - 1)) {
+			                                                buffer_append_string_len(b,CONST_STR_LEN("<D:getcontenttype>"));
+			                                                buffer_append_string_buffer(b, ds->value);
+			                                                buffer_append_string_len(b, CONST_STR_LEN("</D:getcontenttype>"));
+                        			                        break;
+			                                        }
+			                                }
+			                        }
+
+                        			buffer_append_string_len(b,CONST_STR_LEN("</D:prop>\n"));
+			                        buffer_append_string_len(b,CONST_STR_LEN("<D:status>HTTP/1.1 200 OK</D:status>\n"));
+			                        buffer_append_string_len(b,CONST_STR_LEN("</D:propstat>\n"));
+		                        }
+#endif
 
 					if (!buffer_is_empty(prop_200)) {
 						buffer_append_string_len(b,CONST_STR_LEN("<D:propstat>\n"));
