--- libupnp-1.3.1.orig/threadutil/inc/iasnprintf.h	2010-06-06 16:41:45.464394260 +0800
+++ libupnp-1.3.1.new/threadutil/inc/iasnprintf.h	2010-06-06 16:37:39.609597940 +0800
@@ -46,12 +46,16 @@
  * Memory must be freed using free.
  */
 
+#if (__GNUC__ >= 3)
 EXPORT int iasnprintf(char **ret,
 	       int incr,
 	       int max,
-	       const char * fmt, ...)
-#if (__GNUC__ >= 3)
-	__attribute__((format (__printf__, 4, 5)));
+	       const char * fmt, ...) __attribute__((format (__printf__, 4, 5)));
+#else
+EXPORT int iasnprintf(char **ret,
+	       int incr,
+	       int max,
+	       const char * fmt, ...);
 #endif
 EXPORT void iasnprintfFree(char *);
 #ifdef __cplusplus
--- libupnp-1.3.1.orig/threadutil/src/iasnprintf.c	2010-06-06 16:41:45.464394260 +0800
+++ libupnp-1.3.1.new/threadutil/src/iasnprintf.c	2010-06-06 16:37:39.589598214 +0800
@@ -64,6 +64,8 @@
     assert( fmt );
     ( *ret ) = ( char * )malloc( incr );
 
+    if( ( *ret ) == NULL ) return -1;
+
     while( 1 ) {
         va_start( ap, fmt );
         retc = vsnprintf( ( *ret ), size, fmt, ap );
--- libupnp-1.3.1.orig/threadutil/src/ThreadPool.c	2010-06-06 16:41:45.464394260 +0800
+++ libupnp-1.3.1.new/threadutil/src/ThreadPool.c	2010-06-06 16:37:39.589598214 +0800
@@ -640,7 +640,8 @@
         jobs = tp->highJobQ.size + tp->lowJobQ.size + tp->medJobQ.size;
 
         threads = tp->totalThreads - tp->persistentThreads;
-
+//+++Patch by shiang for WSC
+#if 0
         while( ( threads == 0 )
                || ( ( jobs / threads ) > tp->attr.jobsPerThread ) ) {
 
@@ -648,7 +649,17 @@
                 return;
             threads++;
         }
+#else
+        while( ( threads == 0 )
+               || ( ( jobs / threads ) >= tp->attr.jobsPerThread ) ) {
+
+            if( CreateWorker( tp ) != 0 )
+                return;
+            threads++;
+        }
 
+#endif
+//---Patch by shiang for WSC
     }
 
 /****************************************************************************
