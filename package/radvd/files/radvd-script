#!/bin/sh

reconstruct_ipv6_address () {
    local v6addr=$1
    local addrpart
    local v6addrstr=""
    v6addr="$(echo $v6addr | awk 'BEGIN { FS = "::" } { print $1 }' | sed 's/:/ /g')"
    for addrpart in $v6addr
    do
        case "$(length $addrpart)" in
        1)
            addrpart="000$addrpart"
        ;;
        2)
            addrpart="00$addrpart"
        ;;
        3)
            addrpart="0$addrpart"
        ;;
        esac
        v6addrstr="$v6addrstr$addrpart"
    done
    echo "$v6addrstr"
}

remove_ipv6_zero () {
    local v6addr=$1
    local addrlen=$(length $v6addr)
    local idx=1
    local addrchar
    local zeroseq=""
    local subseq_zero_begin=0
    local outputaddr=""
    while [ "$idx" -le "$addrlen" ];
    do
        addrchar=$(echo $v6addr | awk 'BEGIN { FS = "" }'" { print \$$idx }")
        [ "$(($idx % 4))" -eq "1" -a "$idx" -ne "1" ] && {
            outputaddr="$outputaddr:"
        }
        [ "$(($idx % 4))" -eq "1" -a "$addrchar" = "0" ] && {
            subseq_zero_begin="1"
            zeroseq="0"
        } || {
            [ "$addrchar" = "0" -a "$subseq_zero_begin" = "1" ] && {
                zeroseq="${zeroseq}0" 
            } || {
                outputaddr="$outputaddr$addrchar"
                subseq_zero_begin=0
                zeroseq=""
            }
        }
        idx=$(($idx + 1))
    done
    echo "$outputaddr" | sed 's/:::*/::/g'
}
wanid=$1
[ -z "$wanid" ] && wanid=0
. /etc/network.sh
nvram fset wan${wanid}_gatewayv6="$GATEWAY"
nvram fset wan${wanid}_maskv6="$LENGTH"
nvram fset wan${wanid}_prefixv6="$PREFIX"
ipaddr="$(nvram get wan0_ipaddrv6)"
dns="$(nvram show wan_dnsv6_rule 0 dns1)"
[ -n "$(nvram show wan_dnsv6_rule 0 dns2)" ] && dns="$dns $(nvram show wan_dnsv6_rule 0 dns2)"
domain="$(nvram show wan_dhcpv6_rule 0 domain)"
echo "ifacev6_up \"wan0\" \"${ipaddr}\" \"$LENGTH\" \"$GATEWAY\" \"$dns\" \"$domain\" \"$PREFIX\"" > /tmp/radvd_iface
[ "$(nvram show wan_dhcpv6_rule 0 type)" = "stateless" -o "$(nvram show wan_dhcpv6_rule 0 type)" = "0" ] && {
    # In stateless mode, ipaddress is generated by kernel.
    # If we need the address value, we have to get it from proc
    # and store into nvram
    parse_prefix="$(reconstruct_ipv6_address $PREFIX)"
    ipaddr=$(cat /proc/net/if_inet6 | grep $parse_prefix | awk '{print $1}')
    ipaddr=$(remove_ipv6_zero "$ipaddr")
    nvram fset wan0_ipaddrv6=$ipaddr
}
ifacev6_up "wan0" "${ipaddr}" "$LENGTH" "$GATEWAY" "$dns" "$domain" "$PREFIX"
