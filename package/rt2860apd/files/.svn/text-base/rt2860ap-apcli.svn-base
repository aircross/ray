#!/bin/sh
# Global variables
RT2860CFG=/etc/wl/RT2860AP.dat
# RT2860CFG=RT2860AP.dat
[ -x nvram_wl0.sh ] && source nvram_wl0.sh && RT2860CFG=RT2860AP.dat

rt2860vars="ApCliEnable ApCliSsid ApCliBssid ApCliAuthMode ApCliEncrypType ApCliWPAPSK \
    ApCliDefaultKeyID ApCliKey1Type ApCliKey1Str ApCliKey2Type ApCliKey2Str \
    ApCliKey3Type ApCliKey3Str ApCliKey4Type ApCliKey4Str"

wlv_apcli_sec_wep_rule_item="key_index key1 key2 key3 key4 keytype encmode"
wlv_apcli_sec_wpa_rule_item="key crypto"
wlv_apcli_sec_wpa2_rule_item="key crypto"
wlv_apcli_rule_item="enable ssid bssid secmode"

##################################
# Functions
##################################

# [ -f nvram.sh ] && source nvram.sh


replace_cfgitem()
{
    sed -i "/$1=/s/$1.*$/$1=$2/g" "$RT2860CFG"
}

get_wep_key_type()
{
local wep_key="$1"
local key_type=0
local wep_key_type="$2"
[ -n "$(echo $wep_key | sed -n '/\$/p')" ] && {
    eval "wep_key=$1"
}
if [ "${wep_key_type}" = "hex" -o "${wep_key_type}" = "0" ]; then
    echo "0"
elif [ "${wep_key_type}" = "ascii" -o "${wep_key_type}" = "1" ]; then
    echo "1"
else
    if [ ${#wep_key} -eq 5 ]; then
        key_type=1
    elif [ ${#wep_key} -eq 13 ]; then
        key_type=1
    fi
    echo $key_type
fi
}

get_rule_value()
{
    local rule_name=$1
    local rule_index=$2
    local rule_entry=$3
    local rule_content="$(nvram show $rule_name $rule_index $rule_entry)"
    echo $rule_content 
}

get_convert_crypto()
{
local crypto="NONE"
local secmode=$1
local crypto=$2

if [ "$secmode" = "disabled" ]; then
    crypto="NONE"
elif [ "$secmode" = "wep" ]; then
    crypto="WEP"
else
    if [ "$crypto" = "tkip" ]; then
        crypto="TKIP"
    elif [ "$crypto" = "aes" ]; then
        crypto="AES"
    elif [ "$crypto" = "mixed" ]; then
        crypto="TKIPAES"
    fi
fi
echo $crypto
}

get_convert_authmode()
{
    local authmode=OPEN
    local secmode=$1
    local wepencmode=$2
    local wpacompatible=$3

    if [ "$secmode" = "wpa" ]; then
        authmode="WPA"
    elif [ "$secmode" = "wpa2" ]; then
        authmode="WPA2"
        [ "$wpacompatible" = "1" ] && authmode="WPA1WPA2"
    elif [ "$secmode" = "psk" ]; then
        authmode="WPAPSK"
    elif [ "$secmode" = "psk2" ]; then
        authmode="WPA2PSK"
        [ "$wpacompatible" = "1" ] && authmode="WPAPSKWPA2PSK"
    elif [ "$secmode" = "wep" ]; then
        authmode=WEPAUTO
        [ "$wepencmode" = "open" ] && authmode="OPEN"
        [ "$wepencmode" = "shared" ] && authmode="SHARED"
    fi

    echo $authmode
}


rt2860ap_get_apcli_rule_var()
{
local wl_num=$(get_rule_value "wl_rule_num" "0" "")
[ "$(nvram get license_invalid)" != "0" -a $wl_num = "0" ] && wl_num=1

local index_if=0
local index_vif=0
local index_apcli=0
local index_apcliid=0

while [ $index_if -lt $wl_num ]
do
    apcli_num=$(get_rule_value "wl${index_if}_apcli_rule_num" "0" "") 
    while [ $index_apcli -lt $apcli_num ]
    do
        rule="wl${index_if}_apcli_rule"
        for item in $wlv_apcli_rule_item; do {
            eval "ra0_apcli_${item}=\"$(get_rule_value ${rule} ${index_apcli} ${item})\""
        } done

        rule="wl${index_if}_apcli_sec_wep_rule"
        for item in $wlv_apcli_sec_wep_rule_item; do {
            eval "ra0_apcli_sec_wep_${item}='$(get_rule_value ${rule} ${index_apcli} ${item})'"
        } done

        rule="wl${index_if}_apcli_sec_wpa_rule"
        for item in $wlv_apcli_sec_wpa_rule_item; do {
            eval "ra0_apcli_sec_wpa_${item}='$(get_rule_value ${rule} ${index_apcli} ${item})'"
        } done
        
        rule="wl${index_if}_apcli_sec_wpa2_rule"
        for item in $wlv_apcli_sec_wpa2_rule_item; do {
            eval "ra0_apcli_sec_wpa2_${item}='$(get_rule_value ${rule} ${index_apcli} ${item})'"
        } done
        
        #assign authentication mode
        ra0_ApCliEnable=$ra0_apcli_enable
        ra0_ApCliSsid=$(echo $ra0_apcli_ssid | /etc/wl/b64 -d)
#        ra0_ApCliBssid=$ra0_apcli_bssid
        if [ $ra0_apcli_secmode = "psk2" ]; then
           ra0_ApCliAuthMode="$(get_convert_authmode ${ra0_apcli_secmode} ${ra0_apcli_sec_wep_encmode})"
           ra0_ApCliEncrypType="$(get_convert_crypto ${ra0_apcli_secmode} ${ra0_apcli_sec_wpa2_crypto})"
           eval "ra0_ApCliWPAPSK='$ra0_apcli_sec_wpa2_key'"
        elif [ $ra0_apcli_secmode = "psk" ]; then
           ra0_ApCliAuthMode="$(get_convert_authmode ${ra0_apcli_secmode} ${ra0_apcli_sec_wep_encmode})"
           ra0_ApCliEncrypType="$(get_convert_crypto ${ra0_apcli_secmode} ${ra0_apcli_sec_wpa_crypto})"
           eval "ra0_ApCliWPAPSK='$ra0_apcli_sec_wpa_key'"
        else
           ra0_ApCliAuthMode=$(get_convert_authmode ${ra0_apcli_secmode} ${ra0_apcli_sec_wep_encmode})
           ra0_ApCliEncrypType="$(get_convert_crypto ${ra0_apcli_secmode} ${ra0_apcli_sec_wep_crypto})"
           eval "ra0_ApCliWPAPSK='$ra0_apcli_sec_wpa_key'"
        fi

        ra0_ApCliDefaultKeyID=$ra0_apcli_sec_wep_key_index
        nv_key_type_str="$(nvram show wl${index_if}_apcli_sec_wep_rule 0 keytype)"
        if [ -z "${nv_key_type_str}" ]; then
            ra0_ApCliKey1Type=$(get_wep_key_type '${ra0_apcli_sec_wep_key1}')
            ra0_ApCliKey2Type=$(get_wep_key_type '${ra0_apcli_sec_wep_key2}')
            ra0_ApCliKey3Type=$(get_wep_key_type '${ra0_apcli_sec_wep_key3}')
            ra0_ApCliKey4Type=$(get_wep_key_type '${ra0_apcli_sec_wep_key4}')
        else
            ra0_ApCliKey1Type=${nv_key_type_str}
            ra0_ApCliKey2Type=${nv_key_type_str}
            ra0_ApCliKey3Type=${nv_key_type_str}
            ra0_ApCliKey4Type=${nv_key_type_str}
        fi
        eval "ra0_ApCliKey1Str='$ra0_apcli_sec_wep_key1'"
        eval "ra0_ApCliKey2Str='$ra0_apcli_sec_wep_key2'"
        eval "ra0_ApCliKey3Str='$ra0_apcli_sec_wep_key3'"
        eval "ra0_ApCliKey4Str='$ra0_apcli_sec_wep_key4'"

        index_apcliid=$(($index_apcliid + 1))
        index_apcli=$(($index_apcli + 1))
    done
    index_apcli=0

    index_vif=0
    index_if=$(($index_if + 1))
done
}

rt2860ap_gencfg()
{
    for n in $rt2860vars; do {
	eval v=\"\$ra0_$n\"
	replace_cfgitem "$n" "$v"
    } done
}

########################################################################
# Main program
########################################################################

# First of all, retrieve all wireless settings from nvram
# All nvram variables about wireless will be prefixed with "_ra0_"

rt2860ap_get_apcli_rule_var
rt2860ap_gencfg # Generate the config file

