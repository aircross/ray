--- linux-2.6.36/drivers/char/i2c_drv.c	2014-04-14 18:54:30.735420146 +0800
+++ linux-2.6.36/drivers/char/i2c_drv.c	2014-04-17 15:32:55.997943593 +0800
@@ -381,6 +381,7 @@
 int i2c_read_bytes(unsigned long dev_addr, unsigned char *rbuf) {
     int i,j;
     unsigned char status_reg;
+    unsigned char readlen = 0;
     i2cdrv_addr = dev_addr;
     i2c_master_init();
     if((i = i2c_check_busy("read start check ready")) < 0) {
@@ -389,6 +390,7 @@
     RT2880_REG(RT2880_I2C_DEVADDR_REG) = i2cdrv_addr;
     RT2880_REG(RT2880_I2C_BYTECNT_REG) = rbuf[0] - 1 + ADDRESS_BYTES;
     RT2880_REG(RT2880_I2C_STARTXFR_REG) = READ_CMD;
+    readlen = rbuf[0];
     for (i=0; i<rbuf[0]; i++) {
         j = 0;
         do {
@@ -400,6 +402,10 @@
                     return -EIO;
                 } else {
                     rbuf[i+1] = RT2880_REG(RT2880_I2C_DATAIN_REG);
+                    if(rbuf[i+1] == 0xa5) {
+                        readlen --;
+                        printk("Hit one count:%d\n", readlen);
+                    }
                     break;
                 }
             }
@@ -412,6 +418,11 @@
     if((i = i2c_check_busy("read finish check ready, not busy")) < 0) {
         return i;
     }
+    if(readlen <= 0) {
+        /* All read back values are 0xA5, means mcu busy */
+        printk("i2c read 0xa5, mcu busy\n");
+        return -EBUSY;
+    }
     return 0;
 }
 /* Input 
